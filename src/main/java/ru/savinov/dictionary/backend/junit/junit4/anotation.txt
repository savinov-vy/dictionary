@Test
каждый тест метода помечается аннотацией тест. Для работы каждого теста создается отдельный объект класса test
(обеспечение не вмешательства тестов друг для друга).
Доказательство в проекте my_junit NewInstanceForEachTest. В первом тесте поле изменяется с помощью сеттера
во втором тесте поле принимает исходное состояние.

Переменная статик не сбрасывается т.к. принадлежит классу

-----------------------------------------------------------------------------------------------------------------------
 @Test(timeout = 100)
для проверки скорости работы метода в параметры аннотации можно задать величину в миллисекундах. При привышении
времени работы тест завалится
пример применения в проекте my_junit - public class ToFastLinkVSArrlistTest

-----------------------------------------------------------------------------------------------------------------------
@Before
Метод помеченный аннотацией @Before называется setUp() выполняется каждый раз перед выполнением каждого
метода помеченного аннотацией тест
-----------------------------------------------------------------------------------------------------------------------
@After
Метод помеченный аннотацией @After называется tearDown() выполняется каждый раз после выполнения каждого
метода помеченного аннотацией тест. Аннотация @After была создана для возврата ресурсов в систему. Если
вдруг понадобится открыть соединение и т.п.

-----------------------------------------------------------------------------------------------------------------------
@BeforeClass
Метод помеченный аннотацией @BeforeClass вызывается один раз при инициализации класса. Метод должен быть статическим

-----------------------------------------------------------------------------------------------------------------------
@AfterClass
Метод помеченный аннотацией @AfterClass вызывается один раз при выгрузке класса. Метод должен быть статическим


----------------------------------------------------------------------------------------------------------------------

