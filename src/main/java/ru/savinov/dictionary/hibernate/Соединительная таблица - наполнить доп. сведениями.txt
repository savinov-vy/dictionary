Иногда бывает необходимо использовать соединительную таблицу для хранения каких либо сведений. Например для
отношений книги - читатели (отношение многие ко многим). Многие читатели прочитали многие книги и оставили отзыв.
Отзывы должны хранится в соединительной таблице.

Для этого нужно сделать сущность которая будет хранится в соединительной (существующей таблице). У этой
сущности будет составной Id состоящий из промежуточной сущности помечанной аннтоацией @Embeddable. В этой сущности нужно
прописать от каких столбцов зависит Id

@Entity
@Table(name = "books_readers")
public class Review{

@Embeddable
public static class Id implements Serializable {

    @Column(name = "reader_id")
    int readerId;

    @Column(name = "book_id")
    int bookId;


    // кроме того понадобится переопределенный equals и Hashcode
}

// Далее прописываем что эта вложенная сущность и есть Id

@EmbaddedId
Id id;

// Нужно эту сущность сослать как на читателей так и на книги
@ManyToOne
@JoinColumn(name = "reader_id")
Reader reader;


@ManyToOne
@JoinColumn(name = "book_id")
Book book;

// Дальнейшие поля можно добавить по необходимости
// Они и будут расширением функционала соединительной таблицы
// например оценка книги

@Column(name = "score")
int score;


// по необходимости можно добавить информацию о поле score в сущности Reader и Book
// для этого указываем поле типа List и через mappedBy соединяем с Review




}

